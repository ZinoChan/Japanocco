{"version":3,"sources":["webpack://japanocco-travel-blog/./src/components/Travel/styles.ts","webpack://japanocco-travel-blog/./src/components/ui/Button/styles.ts","webpack://japanocco-travel-blog/./src/components/ui/Button/index.tsx","webpack://japanocco-travel-blog/./src/components/ui/Card/styles.ts","webpack://japanocco-travel-blog/./src/components/ui/Card/index.tsx"],"names":["BtnContainer","SliderContainer","LinkText","Button","motion","primary","children","whileHover","scale","whileTap","CardContainer","TextContainer","CardTitle","CardFooter","Location","CardLink","image","title","location","$image","getImage","G","alt","className","icon","faMapMarkerAlt"],"mappings":"kOAEO,IAAMA,GAAe,qTAKfC,GAAkB,mIAIlBC,GAAW,qjB,kGCHXC,GAAU,OAAOC,WAAP,sBAAsB,kBAA4B,CACnE,ojBADuC,EAAEC,QAE/B,6JAA4B,2EAF6B,8EAAlD,I,UCavB,EAZE,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACV,OACE,QAAC,EAAD,CACED,QAASA,EACTE,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,MAElBF,K,wFCZF,IAAMI,GAAa,2OAKbC,GAAgB,4EAIhBC,GAAY,gbAIZC,GAAa,2HAIbC,GAAW,iZAIXC,GAAW,8Z,wCCGxB,EAtBa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtBC,GAASC,OAASJ,GAExB,OACE,QAAC,EAAD,MACE,QAAC,EAAAK,EAAD,CAAaL,MAAOG,EAAQG,IAAI,UAChC,QAAC,EAAD,MACE,QAAC,EAAD,KAAmBL,IACnB,QAAC,EAAD,MACE,QAAC,EAAD,MACE,gBAAMM,UAAU,iBACd,QAAC,IAAD,CAAiBC,KAAMC,SAExBP,IAEH,QAAC,EAAD","file":"8732f049cd65405cc74ddc14568e32c2d50abf7c-40d45751f0c5969bb2e3.js","sourcesContent":["import tw from \"twin.macro\";\n\nexport const BtnContainer = tw.div`\n    flex items-center justify-center space-x-4 mb-10\n`\n\n\nexport const SliderContainer = tw.div`\n    max-w-screen-lg mx-auto overflow-x-hidden\n`\n\nexport const LinkText = tw.span`\n    font-poppins font-semibold hover:text-secondary  block text-center mt-8 text-lg capitalize text-primary\n`","import tw from \"twin.macro\"\nimport {motion} from 'framer-motion';\n\nimport styled from '@emotion/styled';\nexport interface StyledProps {\n    primary?: boolean;\n}\n\nexport const Button  = styled(motion.button)(({primary}: StyledProps) => [\n    tw`py-2 focus:outline-none px-6 text-sm font-poppins rounded-md font-semibold border border-primary `,\n    primary ? tw`bg-primary text-white` : tw`text-primary`,\n    `box-shadow: box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1)`,\n    `min-width: 114px`\n]) ","import React from \"react\"\n\nimport * as Styled from \"./styles\"\n\ninterface Props extends Styled.StyledProps {\n  children: React.ReactNode\n}\n\nconst Button: React.FC<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> =\n  ({ primary, children }) => {\n    return (\n      <Styled.Button\n        primary={primary}\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        {children}\n      </Styled.Button>\n    )\n  }\n\nexport default Button\n","import styled from \"@emotion/styled\";\nimport tw from \"twin.macro\";\n\n\nexport const CardContainer = styled.div`\n    ${tw`rounded-lg overflow-hidden  bg-white w-max`};\n    box-shadow: 0 16px 50px rgba(0,0,0, 0.1);\n`\n\nexport const TextContainer = tw.div`\n    p-2 \n`\n\nexport const CardTitle = tw.h3`\n    font-poppins font-semibold text-lg text-primary mb-2\n`\n\nexport const CardFooter = tw.div`\n    flex items-center justify-between \n`\n\nexport const Location = tw.span`\n    font-poppins text-sm text-gray-500\n`\n\nexport const CardLink = tw.span`\n    font-poppins font-semibold text-sm text-secondary\n`","import React from \"react\"\nimport * as Styled from \"./styles\"\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\"\n\nconst Card = ({ image, title, location }) => {\n  const $image = getImage(image)\n\n  return (\n    <Styled.CardContainer>\n      <GatsbyImage image={$image} alt=\"city\" />\n      <Styled.TextContainer>\n        <Styled.CardTitle>{title}</Styled.CardTitle>\n        <Styled.CardFooter>\n          <Styled.Location>\n            <span className=\"mr-2 w-6 h-6\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n            </span>\n            {location}\n          </Styled.Location>\n          <Styled.CardLink>Read more</Styled.CardLink>\n        </Styled.CardFooter>\n      </Styled.TextContainer>\n    </Styled.CardContainer>\n  )\n}\n\nexport default Card\n"],"sourceRoot":""}